{"version":3,"sources":["Authentication.js","api/validateUser.js","components/LoginPage.js","components/NewMaterialRequest.js","components/DisplayMaterialRequest.js","components/UpdateMRO.js","components/MROHistory.js","components/Help.js","components/Search.js","Router.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Authentication","isAuthenticated","authenticate","this","logout","getAuth","validateUser","props","state","data","fetch","then","response","console","log","json","setState","map","row","key","id","name","score","renderData","React","Component","LoginPage","validateLogin","e","preventDefault","userId","target","elements","value","paswd","history","push","isInvalid","errMsg","onSubmit","htmlFor","type","withRouter","NewMaterialRequest","handleChange","event","form","handleSubmit","materialCode","quantity","addRow","label","onChange","autoFocus","content","disabled","DisplayMaterialRequest","action","defaultValue","updatedMRO","updatedUser","updateRow","onClose","prevProps","prevState","user","getMaterialById","MROHistory","isOpen","onOpen","onClick","deleteRow","Help","Search","placeholder","Router","PrivateRoute","component","rest","render","to","pathname","exact","path","ShowMRO","Header","Footer","className","Date","getFullYear","App","handleSearchChange","results","material","filter","m","toLowerCase","includes","query","resetSearch","regex","RegExp","match","length","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a9063a93.chunk.js","sourcesContent":["const Authentication = {\n    isAuthenticated: false,\n    authenticate() { this.isAuthenticated = true },\n    logout() { this.isAuthenticated = false },\n    getAuth() { return this.isAuthenticated }\n};\nexport default Authentication;","import React from 'react'\n// import LoginPage from '../components/LoginPage'\n\n// Get all records where userID mache\n// from sheet \"Sheet1\"\nexport default class validateUser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n        };\n    }\n    // console.log(LoginPage);\n\n    componentDidMount() {\n        const url = ''\n        fetch(url)\n            .then((response) => {\n                console.log(response);\n\n                return response.json()\n            }).then((json) => {\n                console.log(json);\n                this.setState({ data: json });\n            });\n    }\n    renderData() {\n        return this.state.data.map((row) =>\n            <div key={row.id}>{row.name} {row.score}</div>\n        );\n    }\n    render() {\n        return (\n            <div>\n                {this.renderData()}\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport Authentication from '../Authentication'\nimport validateUser from '../api/validateUser'\nimport { withRouter } from 'react-router-dom';\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isInvalid: false,\n            userId: 0,\n            paswd: ''\n        }\n    }\n\n    validateLogin = (e) => {\n        e.preventDefault();\n        const userId = e.target.elements.userId.value\n        const paswd = e.target.elements.paswd.value\n        console.log(validateUser);\n\n        if ((userId == 11) && (paswd == '123')) {\n            // this.props.apiCall()\n            this.props.history.push(\"/NewMRO\")\n            Authentication.isAuthenticated = !Authentication.isAuthenticated\n        } else {\n            this.setState({\n                isInvalid: true\n            });\n        }\n    }\n    render() {\n        let errMsg = this.state.isInvalid ? 'wrong information' : ''\n        return (\n            <>\n                <h1>Login Page</h1>\n                <hr />\n                <form onSubmit={(e) => this.validateLogin(e)}>\n                    <fieldset>\n                        <legend><strong>Login</strong></legend>\n                        {errMsg}\n                        <br />\n                        <label htmlFor=\"userId\">User ID: </label>\n                        <input type=\"text\" name=\"userId\" />\n                        <br />\n                        <label htmlFor=\"paswd\">Password: </label>\n                        <input type=\"password\" name=\"paswd\" />\n                        <br />\n                        <br />\n                        <input type=\"submit\" value=\"Login\" name=\"submit\" />\n                    </fieldset>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default withRouter(LoginPage);\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nclass NewMaterialRequest extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            form: {\n                materialCode: '',\n                quantity: '',\n            },\n        }\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target\n\n        this.setState({\n            form: { ...this.state.form, [name]: value },\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n        const { materialCode, quantity } = this.state.form\n        const { addRow } = this.props\n\n        const newUser = {\n            materialCode,\n            quantity,\n        }\n\n        addRow(newUser)\n        this.setState(this.state)\n\n        this.props.history.push(\"/myhistory\")\n    }\n\n    render() {\n        const { materialCode, quantity } = this.state.form\n\n        return (\n            <div>\n                <h1>Create New Material Request</h1>\n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        <div>\n                            <label>materialCode</label>\n                            <input\n                                label=\"materialCode\"\n                                name=\"materialCode\"\n                                value={materialCode}\n                                onChange={this.handleChange}\n                                autoFocus={true}\n                            />\n                        </div>\n                        <div>\n                            <label>quantity</label>\n                            <input\n                                label=\"quantity\"\n                                name=\"quantity\"\n                                value={quantity}\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <button type=\"submit\" content=\"Submit\" disabled={!materialCode || !quantity} />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(NewMaterialRequest)","import React from 'react'\n\nconst DisplayMaterialRequest = () => {\n    return (\n        <>\n            <h1>DisplayMaterialRequest</h1>\n            <hr />\n            <form action=\"\" onSubmit={() => this.validateLogin()}>\n                <fieldset>\n                    <legend><strong>Login</strong></legend>\n                    <label htmlFor=\"mroNumber\">MRO#: </label>\n                    <br />\n                    <label htmlFor=\"mroNumber\">items: </label>\n                    <ol>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                    </ol>\n                    <input type=\"submit\" defaultValue=\"Login\" name=\"submit\" />\n                </fieldset>\n            </form>\n        </>\n    )\n}\n\nexport default DisplayMaterialRequest\n","import React from 'react'\r\n\r\nexport default class updatedMRO extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            form: {\r\n                materialCode: '',\r\n                quantity: '',\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.id !== this.props.id) {\r\n            const user = this.props.getMaterialById(this.props.id)\r\n\r\n            this.setState({\r\n                form: {\r\n                    materialCode: user.materialCode,\r\n                    quantity: user.quantity,\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            form: { ...this.state.form, [name]: value },\r\n        })\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n\r\n        const { materialCode, quantity } = this.state.form\r\n        const { updateRow } = this.props\r\n\r\n        const updatedUser = {\r\n            materialCode,\r\n            quantity,\r\n        }\r\n\r\n        updateRow(this.props.id, updatedUser)\r\n        this.props.onClose()\r\n    }\r\n\r\n    render() {\r\n        const { materialCode, quantity } = this.state.form\r\n\r\n        return (\r\n            <div>\r\n                <h1>Update Material Request Order</h1>\r\n                <div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            <label>materialCode</label>\r\n                            <input label=\"materialCode\"\r\n                                name=\"materialCode\"\r\n                                value={materialCode}\r\n                                onChange={this.handleChange} />\r\n                        </div>\r\n                        <div>\r\n                            <label>quantity</label>\r\n                            <input\r\n                                label=\"quantity\"\r\n                                name=\"quantity\"\r\n                                value={quantity}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" content=\"Submit\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\nimport UpdateMRO from './UpdateMRO'\n\nexport default class MROHistory extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isOpen: false,\n            id: '',\n        }\n    }\n\n    onClose = () => {\n        this.setState({ isOpen: false })\n    }\n\n    onOpen = () => {\n        this.setState({ isOpen: true, id: this.props.id })\n    }\n\n    render() {\n        return (\n            <div>\n                <UpdateMRO\n                    onClose={this.onClose}\n                    isOpen={this.state.isOpen}\n                    id={this.state.id}\n                    updateRow={this.props.updateRow}\n                    getMaterialById={this.props.getMaterialById}\n                />\n                <div>\n                    <div>\n                        <div>\n                            <h1>materialCode</h1>\n                            <h1>quantity</h1>\n                            <h1>Actions</h1>\n                        </div>\n                    </div>\n                    <div>\n                        {this.props.data.map(row => (\n                            <div key={row.materialCode}>\n                                <h3>{row.materialCode}</h3>\n                                <h3>{row.quantity}</h3>\n                                <h3>\n                                    <button\n                                        content=\"Edit\"\n                                        onClick={() => {\n                                            this.setState({ isOpen: true, id: row.materialCode })\n                                        }}\n                                    />\n                                    <button\n                                        content=\"Delete\"\n                                        onClick={() => {\n                                            this.props.deleteRow(row.materialCode)\n                                        }}\n                                    />\n                                </h3>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nconst Help = () => {\n    return <h1> Help</h1>\n}\n\nexport default Help;","import React from 'react';\r\n\r\nexport default class Search extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\"\r\n                    value={this.props.value}\r\n                    onChange={this.props.onChange}\r\n                    placeholder=\"Search\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport NewMRO from './components/NewMaterialRequest';\nimport ShowMRO from './components/DisplayMaterialRequest';\nimport AllMRO from './components/MROHistory';\nimport Help from './components/Help';\nimport Authentication from './Authentication';\nimport Search from './components/Search'\n\nexport default class Router extends React.Component {\n    render() {\n        const PrivateRoute = ({ component: Component, ...rest }) => (\n            <Route {...rest}\n                render={props => Authentication.getAuth() ? (<Component {...props} />) : (<Redirect to={{ pathname: \"/\" }} />)}\n            />\n        );\n        return (\n            <Switch>\n                <Route\n                    exact path=\"/\"\n                    component={() => <LoginPage />} />\n                <Route\n                    path=\"/logout\"\n                    component={() => <LoginPage />} />\n                <PrivateRoute\n                    path=\"/NewMRO\"\n                    component={() => <NewMRO addRow={this.props.addRow} />} />\n                <PrivateRoute\n                    path=\"/myhistory\"\n                    component={() =>\n                        <>\n                            <Search\n                                value={this.props.value}\n                                onChange={this.props.onChange} />\n                            <AllMRO\n                                data={this.props.data}\n                                deleteRow={this.props.deleteRow}\n                                updateRow={this.props.updateRow}\n                                getMaterialById={this.props.getMaterialById}\n                            />\n                        </>} />\n                {/* <Route\n                    path=\"/myhistory\"\n                    component={() => <Search\n                    />} /> */}\n                <PrivateRoute\n                    path=\"/myhistory\"\n                    component={ShowMRO} />\n                <Route\n                    path=\"/Help\"\n                    component={Help} />\n            </Switch>\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Authentication from '../Authentication'\n//useHistory \nexport default class Header extends React.Component {\n    logout = (e) => {\n        Authentication.isAuthenticated = !Authentication.isAuthenticated\n    }\n    render() {\n        return (\n            <div>\n                <Link to=\"newMRO\">New Material Request</Link>\n                {'  ||  '}\n                <Link to=\"myhistory\">Material Request Ordr History</Link>\n                {'  ||  '}\n                <Link to=\"Help\">Help</Link>\n                {'  ||  '}\n                <Link onClick={(e) => this.logout(e)} to=\"logout\">Logout</Link>\n                <br />\n                <br />\n            </div>\n        );\n    }\n}\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <p>&copy; {new Date().getFullYear()} Warehouse Solution</p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport Router from './Router';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n// import axios from 'axios';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // material: [\n      //   { materialCode: 'Tania', quantity: 'floppydiskette' },\n      //   { materialCode: 'Timm', quantity: 'zeitgeist' },\n      //   { materialCode: 'Craig', quantity: 'siliconeidolon' },\n      // ],\n      material: [],\n      results: [],\n      query: '',\n    }\n  }\n  componentDidMount() {\n    // Will return all the posts that belong to the first user\n    fetch('https://jsonplaceholder.typicode.com/posts?userId=1')\n      .then(response => response.json())\n      .then(json => {\n        console.log(json)\n        console.log(json)\n      })\n\n    // const url = 'https://jsonplaceholder.typicode.com/posts?userId=1';\n    // fetch(url).then(response => response.json()).then(data => {\n    //   if (data.error_message) {\n    //     throw new Error(data.error_message);\n    //   }\n    //   console.log('DATA: ', data);\n    //   this.setState({ material: data });\n    // }).then(null, error => {\n    //   console.log(String(error))\n    //   console.log(error)\n    // });\n  }\n  // apiCall = () => {\n  //   console.log(\"dfgdfgfdgdgfdfgdfgdfgfd\")\n  // }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.material !== this.state.material) {\n      this.resetSearch()\n    }\n  }\n\n  handleSearchChange = event => {\n    const value = event.target.value;\n    const results = this.state.material.filter(m => m.materialCode.toLowerCase().includes(value.toLowerCase()))\n    this.setState({\n      query: value,\n      results: results,\n    });\n  }\n\n  resetSearch = () => {\n    const { material, query } = this.state\n\n    const results = material.filter(user => {\n      const regex = new RegExp(query, 'gi')\n      return user.materialCode.match(regex)\n    })\n\n    this.setState({ results })\n  }\n\n  getMaterialById = id => {\n    const { material } = this.state\n\n    const u = material.filter(user => user.materialCode === id)\n\n    return u[0]\n  }\n\n  addRow = user => {\n    const { material } = this.state\n\n    this.setState({ material: [...material, user] })\n  }\n\n  updateRow = (id, updatedUser) => {\n    const { material } = this.state\n\n    this.setState({\n      material: material.map(user => (user.materialCode === id ? updatedUser : user)),\n    })\n  }\n\n  deleteRow = id => {\n    const { material } = this.state\n\n    this.setState({\n      material: material.filter(user => user.materialCode !== id),\n    })\n  }\n  render() {\n    const data = this.state.results.length === 0 && !this.state.query ? this.state.material : this.state.results\n    return (\n      <>\n        <Header />\n        <Router\n          data={data}\n          // apiCall={this.apiCall}\n          updateRow={this.updateRow}\n          deleteRow={this.deleteRow}\n          getMaterialById={this.getMaterialById}\n\n          addRow={this.addRow}\n\n          value={this.state.query}\n          onChange={this.handleSearchChange}\n        />\n        <Footer />\n      </>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n// entry point\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}