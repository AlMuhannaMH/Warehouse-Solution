{"version":3,"sources":["auth/Authentication.js","components/LoginPage.js","components/NewMaterialRequest.js","components/UpdateMRO.js","components/MROHistory.js","components/Help.js","components/Search.js","Router.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Authentication","isAuthenticated","authenticate","this","logout","getAuth","LoginPage","props","validateLogin","e","preventDefault","userId","target","elements","value","paswd","parseInt","history","push","setState","isInvalid","state","errMsg","Container","Row","Col","md","span","offset","Badge","variant","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","name","Text","className","Button","React","Component","withRouter","NewMaterialRequest","handleUserChange","event","form","handleUserSubmit","id","title","body","handleNewRow","label","onChange","autoFocus","as","rows","content","disabled","updatedMRO","updatedUser","updateRow","onClose","prevProps","prevState","materialRequestOrder","getMaterialById","Modal","open","isOpen","closeIcon","Header","Content","handleSubmit","Field","Input","MROHistory","onOpen","data","map","row","key","onClick","deleteRow","Help","Alert","Heading","Search","Router","PrivateRoute","component","rest","render","to","pathname","exact","path","Nav","justify","defaultActiveKey","Item","Link","Footer","Date","getFullYear","App","handleSearchChange","results","material","filter","m","toLowerCase","includes","query","resetSearch","user","length","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.26805e37.chunk.js","sourcesContent":["const Authentication = {\n    isAuthenticated: false,\n    authenticate() { this.isAuthenticated = true },\n    logout() { this.isAuthenticated = false },\n    getAuth() { return this.isAuthenticated }\n};\nexport default Authentication;","import React from \"react\";\nimport Authentication from '../auth/Authentication'\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col, Form, Badge, Button } from 'react-bootstrap'\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isInvalid: false,\n            userId: 0,\n            paswd: ''\n        }\n    }\n\n    validateLogin = (e) => {\n        e.preventDefault();\n        const userId = e.target.elements.userId.value\n        const paswd = e.target.elements.paswd.value\n\n        if ((parseInt(userId) === 5495) && (paswd === '123')) {\n            this.props.history.push(\"/NewMRO\")\n            Authentication.isAuthenticated = !Authentication.isAuthenticated\n        } else {\n            this.setState({\n                isInvalid: true\n            });\n        }\n    }\n    render() {\n        let errMsg = this.state.isInvalid ? 'wrong information' : ''\n        return (\n            <Container>\n                <Row>\n                    <Col md={{ span: 6, offset: 3 }}>\n                        <h1><Badge variant=\"secondary\">Login Page</Badge></h1>\n                        <br /><br />{errMsg}<br /><br />\n                        <Form onSubmit={(e) => this.validateLogin(e)}>\n                            <Form.Group controlId=\"formBasicUserID\" >\n                                <Form.Label>User ID</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter your id\" name=\"userId\" />\n                                <Form.Text className=\"text-muted\">We'll never share your information with anyone else.</Form.Text>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\" name=\"paswd\" />\n                            </Form.Group>\n                            <Button type=\"submit\" value=\"Login\" name=\"submit\" variant=\"dark\">Login</Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\n\n\n\nexport default withRouter(LoginPage);\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport { Container, Row, Col, Form, Badge, Button } from 'react-bootstrap'\n\nclass NewMaterialRequest extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            form: { userId: 1, id: '', title: '', body: '', },\n        }\n    }\n\n    handleUserChange = event => {\n        const { name, value } = event.target\n        this.setState({\n            form: { ...this.state.form, [name]: value },\n        })\n    }\n\n    handleUserSubmit = event => {\n        event.preventDefault()\n        const { id, title, body, } = this.state.form\n        const { handleNewRow } = this.props\n        const newMaterial = { userId: 1, id, title, body, }\n        handleNewRow(newMaterial)\n        this.setState(this.state)\n        this.props.history.push(\"/myhistory\")\n    }\n    handleNewRow\n    render() {\n        const { id, title, body } = this.state.form\n        return (\n            <Container>\n                <Row>\n                    <Col md={{ span: 6, offset: 3 }}>\n                        <h1><Badge variant=\"secondary\">New Material Request Page</Badge></h1>\n                        <br /><br />\n                        <Form onSubmit={this.handleUserSubmit}>\n                            <Form.Group controlId=\"nmro.MaterialCode\">\n                                <Form.Label>Material Code</Form.Label>\n                                <Form.Control label=\"title\"\n                                    placeholder=\"MR-098-CLM\"\n                                    name=\"title\"\n                                    value={title}\n                                    onChange={this.handleUserChange}\n                                    autoFocus={true} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"nmro.Description\">\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control as=\"textarea\"\n                                    label=\"body\"\n                                    name=\"body\"\n                                    value={body}\n                                    rows=\"3\"\n                                    onChange={this.handleUserChange} />\n                            </Form.Group>\n                            <Form.Group controlId=\"nmro.Quantity\">\n                                <Form.Label>Quantity</Form.Label>\n                                <Form.Control label=\"id\"\n                                    name=\"id\"\n                                    value={id}\n                                    onChange={this.handleUserChange} />\n                            </Form.Group>\n                            <Button type=\"submit\" content=\"Submit\" disabled={!title || !body || !id} variant=\"dark\">Create</Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(NewMaterialRequest)\n","import React from 'react'\r\nimport { Form, Button, Modal, } from 'react-bootstrap'\r\n\r\nexport default class updatedMRO extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            form: {\r\n                userId: 1,\r\n                id: '',\r\n                title: '',\r\n                body: '',\r\n            },\r\n        }\r\n    }\r\n    //When component props changed\r\n    // DOM is refreshed\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.id !== this.props.id) {\r\n            const materialRequestOrder = this.props.getMaterialById(this.props.id)\r\n            this.setState({\r\n                form: {\r\n                    title: materialRequestOrder.title,\r\n                    body: materialRequestOrder.body,\r\n                    id: materialRequestOrder.id,\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    handleUserChange = (e) => {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            form: { ...this.state.form, [name]: value },\r\n        })\r\n    }\r\n\r\n    handleUserSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { id, title, body } = this.state.form\r\n        const { updateRow } = this.props\r\n        const updatedUser = { title, body, id, }\r\n        updateRow(this.props.id, updatedUser)\r\n        this.props.onClose()\r\n    }\r\n\r\n    render() {\r\n        const { title, body, id } = this.state.form\r\n        return (\r\n            // <div>\r\n            //     <h1>Update Material Request Order</h1>\r\n            //     <div>\r\n            //         <form onSubmit={this.handleUserSubmit}>\r\n            //             <div>\r\n            //                 <label>title</label>\r\n            //                 <input label=\"title\"\r\n            //                     name=\"title\"\r\n            //                     value={title}\r\n            //                     onChange={this.handleUserChange} />\r\n            //             </div>\r\n            //             <div>\r\n            //                 <label>body</label>\r\n            //                 <input label=\"body\"\r\n            //                     name=\"body\"\r\n            //                     value={body}\r\n            //                     onChange={this.handleUserChange} />\r\n            //             </div>\r\n            //             <div>\r\n            //                 <label>quantity</label>\r\n            //                 <input\r\n            //                     label=\"id\"\r\n            //                     name=\"id\"\r\n            //                     value={id}\r\n            //                     onChange={this.handleUserChange}\r\n            //                 />\r\n            //             </div>\r\n            //             <button type=\"submit\" content=\"Submit\" />\r\n            //         </form>\r\n            //     </div>\r\n            // </div>\r\n            <Modal open={this.props.isOpen} onClose={this.props.onClose} closeIcon>\r\n                <Modal.Header>Update</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Field>\r\n                            <Form.Input label=\"title\"\r\n                                name=\"title\"\r\n                                value={title}\r\n                                onChange={this.handleUserChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Form.Input label=\"body\"\r\n                                name=\"body\"\r\n                                value={body}\r\n                                onChange={this.handleUserChange} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Form.Input label=\"id\"\r\n                                name=\"id\"\r\n                                value={id}\r\n                                onChange={this.handleUserChange} />\r\n                        </Form.Field>\r\n                        <Button type=\"submit\" content=\"Submit\" />\r\n                    </Form>\r\n                </Modal.Content>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// import React, { Component } from 'react'\r\n// import { Form, Modal, Button } from 'semantic-ui-react'\r\n\r\n// class Edit extends Component {\r\n//     initialState = {\r\n//         form: {\r\n//             name: '',\r\n//             username: '',\r\n//         },\r\n//     }\r\n\r\n//     state = this.initialState\r\n\r\n//     componentDidUpdate(prevProps, prevState) {\r\n//         if (prevProps.id !== this.props.id) {\r\n//             const user = this.props.getUserById(this.props.id)\r\n\r\n//             this.setState({\r\n//                 form: {\r\n//                     name: user.name,\r\n//                     username: user.username,\r\n//                 },\r\n//             })\r\n//         }\r\n//     }\r\n\r\n//     handleChange = event => {\r\n//         const { name, value } = event.target\r\n\r\n//         this.setState({\r\n//             form: { ...this.state.form, [name]: value },\r\n//         })\r\n//     }\r\n\r\n//     handleSubmit = event => {\r\n//         event.preventDefault()\r\n\r\n//         const { name, username } = this.state.form\r\n//         const { updateRow } = this.props\r\n\r\n//         const updatedUser = {\r\n//             name,\r\n//             username,\r\n//         }\r\n\r\n//         updateRow(this.props.id, updatedUser)\r\n//         this.props.onClose()\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default Edit\r\n","import React from 'react'\nimport UpdateMRO from './UpdateMRO'\n\nexport default class MROHistory extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isOpen: false,\n            id: '',\n        }\n    }\n\n    onClose = () => {\n        this.setState({ isOpen: false })\n    }\n\n    onOpen = () => {\n        this.setState({ isOpen: true, id: this.props.id })\n    }\n\n    render() {\n        return (\n            <div>\n                <UpdateMRO\n                    onClose={this.onClose}\n                    isOpen={this.state.isOpen}\n                    id={this.state.id}\n                    updateRow={this.props.updateRow}\n                    getMaterialById={this.props.getMaterialById}\n                />\n                <div>\n                    <div>\n                        <div>\n\n                            <h1>title</h1>\n                            <h1>body</h1>\n                            <h1>quantity</h1>\n                            <h1>Actions</h1>\n                        </div>\n                    </div>\n                    <div>\n                        {this.props.data.map(row => (\n\n                            <div key={row.id}>\n                                <h3>{row.title}</h3>\n                                <h3>{row.body}</h3>\n                                <h3>{row.id}</h3>\n                                <h3>\n                                    <button\n                                        content=\"Edit\"\n                                        onClick={() => {\n                                            this.setState({ isOpen: true, id: row.id })\n                                        }}\n                                    />\n                                    <button\n                                        content=\"Delete\"\n                                        onClick={() => {\n                                            this.props.deleteRow(row.id)\n                                        }}\n                                    />\n                                </h3>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert'\nconst Help = () => {\n    return (\n        <Alert variant=\"success\">\n            <Alert.Heading><h1><strong>Support </strong>– professional help</h1></Alert.Heading>\n            <br />\n            <p>We are not only dedicated to developing expertly engineered products that provide the\n                    best possible value to our clients and their enterprise processes, but also to delivering the highest\n                    degree of qualified technical support and services. Supporting you on an individual basis helps ensure\n                    that you can use all the software products we make successfully and with zero constraints – even years\n                    after they were first installed. You can reach AlMuhannaMHVision Support by phone daily from 09:00 to 17:00 hours\n                    (GMT+3) and by email around the clock. Moreover, you can look forward to speaking with your personal representative,\n                    not with some anonymous call center agent.</p>\n            <br />\n            <br />\n            <hr />\n            <h2>Need help? Connect with us and we will gladly assist you.</h2>\n            <br />\n            <p className=\"mb-0\">\n                <p>Telephone: +966 50 000 0005</p>\n                <p>Email: AlMuhannaMH@Outlook.com</p>\n            </p>\n        </Alert>\n    )\n}\n\nexport default Help;","import React from 'react';\r\n\r\nexport default class Search extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\"\r\n                    value={this.props.value}\r\n                    onChange={this.props.onChange}\r\n                    placeholder=\"Search\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport NewMRO from './components/NewMaterialRequest';\n// import ShowMRO from './components/DisplayMaterialRequest';\nimport AllMRO from './components/MROHistory';\nimport Help from './components/Help';\nimport Authentication from './auth/Authentication';\nimport Search from './components/Search'\n\nexport default class Router extends React.Component {\n    render() {\n        const PrivateRoute = ({ component: Component, ...rest }) => (\n            <Route {...rest}\n                render={props => Authentication.getAuth() ? (<Component {...props} />) : (<Redirect to={{ pathname: \"/\" }} />)}\n            />\n        );\n        return (\n            <Switch>\n                <Route\n                    exact path=\"/\"\n                    component={() => <LoginPage />} />\n                <Route\n                    path=\"/logout\"\n                    component={() => <LoginPage />} />\n                <PrivateRoute\n                    path=\"/NewMRO\"\n                    component={() => <NewMRO handleNewRow={this.props.handleNewRow} />} />\n                <PrivateRoute\n                    path=\"/myhistory\"\n                    component={() =>\n                        <>\n                            <Search\n                                value={this.props.value}\n                                onChange={this.props.onChange} />\n                            <AllMRO\n                                data={this.props.data}\n                                deleteRow={this.props.deleteRow}\n                                updateRow={this.props.updateRow}\n                                getMaterialById={this.props.getMaterialById}\n                            />\n                        </>} />\n                {/* <PrivateRoute\n                    path=\"/myhistory\"\n                    component={ShowMRO} /> */}\n                <Route\n                    path=\"/Help\"\n                    component={Help} />\n            </Switch>\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Authentication from '../auth/Authentication'\nimport Nav from 'react-bootstrap/Nav'\n\n//useHistory \nexport default class Header extends React.Component {\n    logout = (e) => {\n        Authentication.isAuthenticated = !Authentication.isAuthenticated\n    }\n    render() {\n        return (\n            <div>\n                <h1>\n                    Welcome to the Warehouse solution\n                </h1>\n                <hr />\n                <br />\n                <Nav justify variant=\"tabs\" defaultActiveKey=\"/home\">\n                    <Nav.Item>\n                        <Nav.Link> <Link to=\"newMRO\">New Material Request</Link> </Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link>  <Link to=\"myhistory\">Material Request Ordr History</Link></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link>  <Link to=\"Help\">Help?</Link></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link>    <Link onClick={(e) => this.logout(e)} to=\"logout\">Logout</Link></Nav.Link>\n                    </Nav.Item>\n                </Nav>\n                <br />\n                <br />\n            </div>\n        );\n    }\n}\n\n\n//     <Link to=\"newMRO\">New Material Request</Link>\n//                 { '  ||  ' }\n// <Link to=\"myhistory\">Material Request Ordr History</Link>\n// { '  ||  ' }\n// <Link to=\"Help\">Help?</Link>\n// { '  ||  ' }\n// <Link onClick={(e) => this.logout(e)} to=\"logout\">Logout</Link>\n//     <br />\n//     <br />","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <br /><br />\n            <hr />\n            <br /><br />\n            <p>&copy; {new Date().getFullYear()} Warehouse Solution</p>\n        </div>\n    )\n}\nexport default Footer\n","import React from 'react';\nimport Router from './Router';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      material: [],\n      results: [],\n      query: '',\n    }\n  }\n  // componentDidMount() {\n  //   const url = 'https://jsonplaceholder.typicode.com/posts?userId=1';\n  //   fetch(url).then(response => response.json()).then(data => {\n  //     if (data.error_message) {\n  //       throw new Error(data.error_message);\n  //     }\n  //     console.log('DATA: ', data);\n  //     this.setState({ material: data.slice(0, 5) });\n  //   }).then(null, error => {\n  //     // console.log(String(error))\n  //     console.log(error)\n  //   });\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.material !== this.state.material) {\n      this.resetSearch()\n    }\n  }\n\n  handleSearchChange = event => {\n    const value = event.target.value;\n    const results = this.state.material.filter(m => m.title.toLowerCase().includes(value.toLowerCase()))\n    this.setState({\n      query: value,\n      results: results,\n    });\n\n  }\n\n  resetSearch = () => {\n    const results = this.state.material.filter(m => m.title.toLowerCase().includes(this.state.query.toLowerCase()))\n    this.setState({ results })\n  }\n\n  getMaterialById = id => {\n    const { material } = this.state\n    const u = material.filter(user => user.id === id)\n    return u[0]\n  }\n\n  handleNewRow = user => {\n    this.setState({ material: [...this.state.material, user] })\n  }\n\n  updateRow = (id, updatedUser) => {\n    const { material } = this.state\n    this.setState({\n      material: material.map(user => (user.id === id ? updatedUser : user)),\n    })\n  }\n\n  deleteRow = id => {\n    const { material } = this.state\n    this.setState({\n      material: material.filter(user => user.id !== id),\n    })\n  }\n\n  render() {\n    const data = this.state.results.length === 0 && !this.state.query ? this.state.material : this.state.results\n    return (\n      <>\n        <Header />\n        <Router\n          data={data}\n          updateRow={this.updateRow}\n          deleteRow={this.deleteRow}\n          getMaterialById={this.getMaterialById}\n          handleNewRow={this.handleNewRow}\n          value={this.state.query}\n          onChange={this.handleSearchChange}\n        />\n        <Footer />\n      </>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './styles/index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport App from './App';\nimport { BrowserRouter as Router, HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Router>\n        <HashRouter>\n            <Container className=\"text-center\">\n                <Row>\n                    <Col md={{ span: 11, offset: 0 }}><App /></Col>\n                </Row>\n            </Container>\n        </HashRouter>\n    </Router>\n    , document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}